// Numbas version: exam_results_page_options
{"name": "Equilibrium of a particle: ball in a trough", "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/55/quantities", "/srv/numbas/media/user-extensions/extracted/98/weh"], "custom_part_types": [{"can_be_step": true, "settings": [{"hint": "The correct answer given as a JME quantity.", "input_type": "code", "evaluate": true, "label": "Correct Quantity.", "name": "correctAnswer", "default_value": "", "help_url": ""}, {"hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "evaluate": true, "label": "% Accuracy for right.", "name": "right", "default_value": "0.2", "help_url": ""}, {"hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "evaluate": true, "label": "% Accuracy for close.", "name": "close", "default_value": "1.0", "help_url": ""}, {"hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75", "label": "Close with units.", "name": "C1", "help_url": ""}, {"hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50", "label": "No units or wrong sign", "name": "C2", "help_url": ""}, {"hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25", "label": "Close, no units.", "name": "C3", "help_url": ""}], "marking_notes": [{"definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n", "name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"definition": "qty(student_scalar, student_units)\n\n", "name": "interpreted_answer", "description": "A value representing the student's answer to this part."}, {"definition": "settings[\"correctAnswer\"]\n\n", "name": "correct_quantity", "description": ""}, {"definition": "units(correct_quantity)\n", "name": "correct_units", "description": ""}, {"definition": "[\"plain\",\"en\"]", "name": "allowed_notation_styles", "description": ""}, {"definition": "matchnumber(studentAnswer,allowed_notation_styles)", "name": "match_student_number", "description": ""}, {"definition": "match_student_number[1]", "name": "student_scalar", "description": ""}, {"definition": "join(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n", "name": "student_units", "description": "<p>Does clumsy substitution to</p>\n<p>1.&nbsp;replace '-'&nbsp;with ' '&nbsp;</p>\n<p>2. replace '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>"}, {"definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n", "name": "good_units", "description": ""}, {"definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n", "name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>"}, {"definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   ", "name": "percent_error", "description": ""}, {"definition": "percent_error <= settings['right']\n", "name": "right", "description": ""}, {"definition": "right_sign and percent_error <= settings['close']", "name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>"}, {"definition": "sign(student_scalar) = sign(correct_quantity) ", "name": "right_sign", "description": ""}], "name": "Engineering Accuracy with units", "source": {"edit_page": "/part_type/19/edit", "author": {"name": "William Haynes", "pk": 2530}, "pk": 19}, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "short_name": "engineering-answer", "input_widget": "string", "published": false, "help_url": "", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "extensions": ["quantities"], "public_availability": "restricted", "can_be_gap": true, "input_options": {"hint": {"value": "", "static": true}, "correctAnswer": "siground(settings['correctAnswer'],4)", "allowEmpty": {"value": true, "static": true}}}], "resources": [], "navigation": {"showfrontpage": false, "preventleave": false, "allowregen": true}, "question_groups": [{"questions": [{"ungrouped_variables": ["alpha", "beta", "A", "W", "B"], "name": "Equilibrium of a particle: ball in a trough", "parts": [{"variableReplacements": [], "showCorrectAnswer": true, "type": "gapfill", "marks": 0, "variableReplacementStrategy": "originalfirst", "prompt": "<p>A {w} cylinder rests in the trough shown. Determine the reactions at <em>A</em> and <em>B</em>.</p>\n<p><em>A</em> =&nbsp;[[0]] &nbsp;&nbsp;</p>\n<p><em></em></p>\n<p><em>B</em> =&nbsp;[[1]]&nbsp;&nbsp;</p>", "sortAnswers": false, "customMarkingAlgorithm": "", "unitTests": [], "scripts": {}, "extendBaseMarkingAlgorithm": true, "gaps": [{"scripts": {}, "marks": 1, "variableReplacements": [], "showCorrectAnswer": true, "type": "engineering-answer", "unitTests": [], "variableReplacementStrategy": "originalfirst", "extendBaseMarkingAlgorithm": true, "customMarkingAlgorithm": "", "settings": {"correctAnswer": "A", "close": "1.0", "C1": "75", "C3": "25", "right": "0.1", "C2": "50"}, "showFeedbackIcon": true}, {"scripts": {}, "marks": 1, "variableReplacements": [], "showCorrectAnswer": true, "type": "engineering-answer", "unitTests": [], "variableReplacementStrategy": "originalfirst", "extendBaseMarkingAlgorithm": true, "customMarkingAlgorithm": "", "settings": {"correctAnswer": "B", "close": "1.0", "C1": "75", "C3": "25", "right": "0.1", "C2": "50"}, "showFeedbackIcon": true}], "showFeedbackIcon": true}], "type": "question", "contributors": [{"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/", "name": "William Haynes"}], "preamble": {"js": "", "css": ""}, "functions": {}, "advice": "<p>There are two ways to solve this problem</p>\n<ol>\n<li>Equilibrium Equation Method\n<ol>\n<li>Draw a free body diagram of the cylinder.</li>\n<li>Set up and simplify the equlibrium equations:<br/> &nbsp;$\\Sigma F_x = 0$ &nbsp;and $\\Sigma F_y = 0$</li>\n<li>Use algebra to solve simultaneously for the unknown forces <em>A</em> and <em>B.</em></li>\n</ol>\n</li>\n<li>Force Triangle Method\n<ol>\n<li>Draw a free body diagram of the cylinder.</li>\n<li>Arrange forces acting on the cylinder into a force triangle.</li>\n<li>Use trig to solve for the unknown reaction forces.</li>\n</ol>\n</li>\n</ol>", "statement": "<p>{geogebra_applet('dsdqn4dr',[['&alpha;', alpha+'&deg;'],['&beta;', &nbsp;beta+'&deg;']])}</p>\n<p></p>\n<p>&nbsp;<span data-jme-visible=\"false\">A: {A} &nbsp;B: {B}</span></p>", "rulesets": {}, "variable_groups": [], "variables": {"B": {"description": "<p>W / (sin(b) cos(a) / sin(a) + cos(b))</p>", "group": "Ungrouped variables", "templateType": "anything", "name": "B", "definition": "W / (sin(radians(beta)) cos(radians(alpha))/ sin(radians(alpha)) + cos(radians(beta)))"}, "W": {"description": "", "group": "Ungrouped variables", "templateType": "anything", "name": "W", "definition": "quantity(random(1..20),random('N','pound'))"}, "alpha": {"description": "", "group": "Ungrouped variables", "templateType": "anything", "name": "alpha", "definition": "random(20..70#5)"}, "A": {"description": "<p>FB sin(b) / sin(a)</p>", "group": "Ungrouped variables", "templateType": "anything", "name": "A", "definition": "B sin(radians(beta))/sin(radians(alpha))"}, "beta": {"description": "", "group": "Ungrouped variables", "templateType": "anything", "name": "beta", "definition": "random(20..70#5)"}}, "metadata": {"description": "<p>Find reactions for a particle in equilibrium</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "variablesTest": {"maxRuns": 100, "condition": ""}, "tags": [], "extensions": ["geogebra", "quantities", "weh"]}], "pickingStrategy": "all-ordered"}], "contributors": [{"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/", "name": "William Haynes"}]}