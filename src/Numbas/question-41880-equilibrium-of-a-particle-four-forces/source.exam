// Numbas version: exam_results_page_options
{"name": "Equilibrium of a particle: four forces", "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/55/quantities", "/srv/numbas/media/user-extensions/extracted/98/weh"], "custom_part_types": [{"name": "Engineering Accuracy with units", "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "public_availability": "restricted", "published": false, "help_url": "", "can_be_step": true, "marking_notes": [{"name": "mark", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"name": "interpreted_answer", "definition": "qty(student_scalar, student_units)\n\n", "description": "A value representing the student's answer to this part."}, {"name": "correct_quantity", "definition": "settings[\"correctAnswer\"]\n\n", "description": ""}, {"name": "correct_units", "definition": "units(correct_quantity)\n", "description": ""}, {"name": "allowed_notation_styles", "definition": "[\"plain\",\"en\"]", "description": ""}, {"name": "match_student_number", "definition": "matchnumber(studentAnswer,allowed_notation_styles)", "description": ""}, {"name": "student_scalar", "definition": "match_student_number[1]", "description": ""}, {"name": "student_units", "definition": "join(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n", "description": "<p>Does clumsy substitution to</p>\n<p>1.&nbsp;replace '-'&nbsp;with ' '&nbsp;</p>\n<p>2. replace '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>"}, {"name": "good_units", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n", "description": ""}, {"name": "student_quantity", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>"}, {"name": "percent_error", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   ", "description": ""}, {"name": "right", "definition": "percent_error <= settings['right']\n", "description": ""}, {"name": "close", "definition": "right_sign and percent_error <= settings['close']", "description": "<p>Only marked close if the student actually has the right sign.</p>"}, {"name": "right_sign", "definition": "sign(student_scalar) = sign(correct_quantity) ", "description": ""}], "can_be_gap": true, "short_name": "engineering-answer", "settings": [{"name": "correctAnswer", "default_value": "", "label": "Correct Quantity.", "hint": "The correct answer given as a JME quantity.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "right", "default_value": "0.2", "label": "% Accuracy for right.", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "close", "default_value": "1.0", "label": "% Accuracy for close.", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "C1", "default_value": "75", "label": "Close with units.", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "help_url": ""}, {"name": "C2", "default_value": "50", "label": "No units or wrong sign", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "help_url": ""}, {"name": "C3", "default_value": "25", "label": "Close, no units.", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "help_url": ""}], "input_options": {"allowEmpty": {"value": true, "static": true}, "hint": {"value": "", "static": true}, "correctAnswer": "siground(settings['correctAnswer'],4)"}, "input_widget": "string", "extensions": ["quantities"]}, {"name": "Drop-down axis reference", "marking_script": "mark:\ncorrect('You chose the ' \n+ ['positive x',\n   'positive y',\n   'negative x',\n   'negative y'][interpreted_answer] +'-axis.')\n                 \n                 \n                 \n\ninterpreted_answer:\nstudentAnswer", "source": {"pk": 23, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/23/edit"}, "description": "<p>Choose a reference axis. Returns an integer index between 0&nbsp;and&nbsp;3. &nbsp;0 =+x axis&nbsp;1 = +y axis&nbsp;2 = -x axis&nbsp;3 = -y axis</p>\n<p>To work with angle quantity part type, include a list&nbsp;variable <em><strong>angle_from_ref</strong></em>, and use the axis choice as index. Replace theta with name of angle.</p>\n<p>let(ang,theta,<br />[if(ang&gt;180,ang-360,ang),<br /> if(ang&gt;270,ang-450,if(ang &lt; -90,ang+270,ang-90)),<br /> if(ang&gt;0,ang-180,ang+180),<br /> if(ang&gt;90,ang-270,90+ang)])</p>\n<p></p>\n<p>and this (modified as necessary) in the mark student answer (after) script:</p>\n<p>index = Numbas.jme.unwrapValue(this.studentAnswerAsJME());<br />angles = Numbas.jme.unwrapValue(Numbas.exam.currentQuestion.scope.getVariable('<strong>angle_from_ref</strong>'));<br />ans = Qty(angles[index]+' deg');<br />this.parentPart.gaps[<strong>1</strong>].settings.correct_quantity.value=ans;<br />this.markingComment(\"For your axis, the direction is \" + ans.toString() +'.');</p>\n<p></p>", "public_availability": "restricted", "published": false, "help_url": "", "can_be_step": true, "marking_notes": [{"name": "mark", "definition": "correct('You chose the ' \n+ ['positive x',\n   'positive y',\n   'negative x',\n   'negative y'][interpreted_answer] +'-axis.')\n                 \n                 \n                 ", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"name": "interpreted_answer", "definition": "studentAnswer", "description": "A value representing the student's answer to this part."}], "can_be_gap": true, "short_name": "drop-down-axis-reference", "settings": [{"name": "dummy", "default_value": "'ignore'", "input_type": "string", "hint": "", "subvars": false, "label": "dummy", "help_url": ""}], "input_options": {"choices": {"value": ["Positive x-axis", "Positive y-axis", "Negative x-axis", "Negative y-axis"], "static": true}, "hint": {"value": "", "static": true}, "correctAnswer": "0"}, "input_widget": "dropdown", "extensions": []}, {"name": "Angle quantity", "marking_script": "mark:\nswitch( \nright and good_units and right_sign and angle_in_range, add_credit(1.0,'Correct.'),\nright and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\nright and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but missing degree symbol.'),\nright and good_units and right_sign and not angle_in_range,add_credit(settings['C1'],'Angle is out of range.'),\nclose and good_units, add_credit(settings['C1'],'Close.'),\nclose and not good_units, add_credit(settings['C3'],'Answer is close, but missing degree symbol.'),\nincorrect('Wrong answer.')\n)\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\ncorrect_scalar:\nscalar(correct_quantity)\n  \n\ncorrect_units:\nunits(correct_quantity)\n\ncorrect_quantity:\nsettings['correct_quantity']\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'\u00b0'),' deg')\n\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_quantity),\nmsg,\nfeedback(msg);false)\n\nstudent_quantity:\nswitch(not good_units, \nstudent_scalar * correct_units, \nnot right_sign,\n-quantity(student_scalar, student_units),\nquantity(student_scalar,student_units)\n)\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n\n   \n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\n\nangle_in_range:\nif(settings['restrict_angle'], abs(student_scalar) <= 90, true)", "source": {"pk": 24, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/24/edit"}, "description": "<p>Angle&nbsp;as a quantity in degrees.</p>", "public_availability": "restricted", "published": false, "help_url": "", "can_be_step": true, "marking_notes": [{"name": "mark", "definition": "switch( \nright and good_units and right_sign and angle_in_range, add_credit(1.0,'Correct.'),\nright and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\nright and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but missing degree symbol.'),\nright and good_units and right_sign and not angle_in_range,add_credit(settings['C1'],'Angle is out of range.'),\nclose and good_units, add_credit(settings['C1'],'Close.'),\nclose and not good_units, add_credit(settings['C3'],'Answer is close, but missing degree symbol.'),\nincorrect('Wrong answer.')\n)", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"name": "interpreted_answer", "definition": "qty(student_scalar, student_units)", "description": "A value representing the student's answer to this part."}, {"name": "correct_scalar", "definition": "scalar(correct_quantity)\n  ", "description": ""}, {"name": "correct_units", "definition": "units(correct_quantity)", "description": ""}, {"name": "correct_quantity", "definition": "settings['correct_quantity']", "description": ""}, {"name": "allowed_notation_styles", "definition": "[\"plain\",\"en\"]", "description": ""}, {"name": "match_student_number", "definition": "matchnumber(studentAnswer,allowed_notation_styles)", "description": ""}, {"name": "student_scalar", "definition": "match_student_number[1]", "description": ""}, {"name": "student_units", "definition": "join(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'\u00b0'),' deg')\n\n", "description": ""}, {"name": "good_units", "definition": "try(\ncompatible(quantity(1, student_units),correct_quantity),\nmsg,\nfeedback(msg);false)", "description": ""}, {"name": "student_quantity", "definition": "switch(not good_units, \nstudent_scalar * correct_units, \nnot right_sign,\n-quantity(student_scalar, student_units),\nquantity(student_scalar,student_units)\n)", "description": ""}, {"name": "right_sign", "definition": "sign(student_scalar) = sign(correct_quantity)", "description": ""}, {"name": "percent_error", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n\n   \n   ", "description": ""}, {"name": "right", "definition": "percent_error <= settings['right']\n", "description": ""}, {"name": "close", "definition": "right_sign and percent_error <= settings['close']\n", "description": ""}, {"name": "angle_in_range", "definition": "if(settings['restrict_angle'], abs(student_scalar) <= 90, true)", "description": ""}], "can_be_gap": true, "short_name": "angle-quantity-from-reference", "settings": [{"name": "correct_quantity", "default_value": "qty(123,'deg')", "label": "Correct Angle as a quantity", "hint": "", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "right", "default_value": "0.2", "label": "% Accuracy for right.", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "restrict_angle", "default_value": true, "label": "Less than 90\u00b0", "hint": "When checked, angle must be between -90&deg; and +90&deg;.", "input_type": "checkbox", "help_url": ""}, {"name": "C1", "default_value": "75", "label": "Close with units.", "hint": "Partial Credit for close value with appropriate units.", "input_type": "percent", "help_url": ""}, {"name": "close", "default_value": "1.0", "label": "% Accuracy for close.", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "C2", "default_value": "50", "label": "No units or wrong sign", "hint": "Partial credit for forgetting units or using wrong sign.", "input_type": "percent", "help_url": ""}, {"name": "C3", "default_value": "25", "label": "Close, no units.", "hint": "Partial Credit for close value without units.", "input_type": "percent", "help_url": ""}], "input_options": {"allowEmpty": {"value": false, "static": true}, "hint": {"value": "", "static": true}, "correctAnswer": "plain_string(settings['correct_quantity'])"}, "input_widget": "string", "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "preventleave": false, "showfrontpage": false}, "question_groups": [{"questions": [{"preamble": {"css": "", "js": ""}, "variable_groups": [{"name": "input", "variables": ["alpha", "beta", "gamma", "units", "maga", "magb", "magc", "debug"]}, {"name": "forces", "variables": ["A", "B", "C", "D", "magd", "theta", "angle_from_ref"]}], "tags": ["Equlibrium", "mechanics", "Mechanics", "Particle Equilbrium", "Statics", "statics"], "type": "question", "statement": "<p>{geogebra_applet('xnbz73te',[['&alpha;',alpha+'&deg;'],['&beta;',beta+'&deg;'],['&gamma;',gamma+'&deg;'],['maga',maga],['magb',magb],['magc',magc]])}</p>\n<p>Determine the magnitude and direction of force <strong>D</strong> required for equilibrium if the forces act in the directions shown and have magnitudes</p>\n<p><em style=\"color: red;\">A</em> = {qty(maga,units)},&nbsp;<em style=\"color: blue;\">B</em> = {qty(magb,units)}, and&nbsp;<em style=\"color: green;\">C</em>&nbsp;= {qty(magC,units)}.</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>", "rulesets": {}, "functions": {"enground": {"type": "number", "language": "jme", "definition": "siground(precround(n,4),4)", "parameters": [["n", "number"]]}}, "name": "Equilibrium of a particle: four forces", "variablesTest": {"condition": "", "maxRuns": 100}, "variables": {"alpha": {"group": "input", "name": "alpha", "definition": "random(0..90#5)", "templateType": "anything", "description": "<ul>\n<li></li>\n</ul>"}, "B": {"group": "forces", "name": "B", "definition": "magb vector(cos(radians(beta)),sin(radians(beta)))", "templateType": "anything", "description": ""}, "magd": {"group": "forces", "name": "magd", "definition": "qty(abs(D),units)\n", "templateType": "anything", "description": ""}, "D": {"group": "forces", "name": "D", "definition": "-(A+B+C)\n", "templateType": "anything", "description": ""}, "magb": {"group": "input", "name": "magb", "definition": "random(10..100#5)", "templateType": "anything", "description": ""}, "maga": {"group": "input", "name": "maga", "definition": "random(10..100#5)", "templateType": "anything", "description": ""}, "angle_from_ref": {"group": "forces", "name": "angle_from_ref", "definition": "let(ang,theta,\n[if(ang>180,ang-360,ang),\nif(ang>270,ang-450,ang-90),\nang-180,\nif(ang>90,ang-270,90+ang)]\n)\n", "templateType": "anything", "description": ""}, "C": {"group": "forces", "name": "C", "definition": "magc vector(cos(radians(gamma)),sin(radians(gamma)))", "templateType": "anything", "description": ""}, "magc": {"group": "input", "name": "magc", "definition": "random(10..100#5)", "templateType": "anything", "description": ""}, "gamma": {"group": "input", "name": "gamma", "definition": "random(180..265#5)", "templateType": "anything", "description": ""}, "theta": {"group": "forces", "name": "theta", "definition": "degrees(atan2(D[1],D[0]))", "templateType": "anything", "description": ""}, "debug": {"group": "input", "name": "debug", "definition": "false", "templateType": "anything", "description": ""}, "beta": {"group": "input", "name": "beta", "definition": "random(270..355#5)", "templateType": "anything", "description": ""}, "units": {"group": "input", "name": "units", "definition": "random('kN','N','lb')", "templateType": "anything", "description": ""}, "A": {"group": "forces", "name": "A", "definition": "maga vector(cos(radians(alpha)),sin(radians(alpha)))\n", "templateType": "anything", "description": ""}}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "metadata": {"licence": "Creative Commons Attribution-NonCommercial 4.0 International", "description": "<p>Three random forces act on a particle. &nbsp;Determine the force required for equilibirum.</p>"}, "parts": [{"showFeedbackIcon": true, "extendBaseMarkingAlgorithm": true, "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "gaps": [{"showFeedbackIcon": true, "marks": "4", "scripts": {}, "type": "engineering-answer", "settings": {"close": "1.0", "C3": "25", "right": "0.2", "C2": "50", "correctAnswer": "magD", "C1": "75"}, "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "showCorrectAnswer": true}, {"showFeedbackIcon": true, "marks": "0", "scripts": {"mark": {"script": "index = Numbas.jme.unwrapValue(this.studentAnswerAsJME());\nangles = Numbas.jme.unwrapValue(Numbas.exam.currentQuestion.scope.getVariable('angle_from_ref'));\nans = Qty(angles[index]+' deg');\nthis.parentPart.gaps[2].settings.correct_quantity.value=ans;\nthis.markingComment(\"For your axis, the direction is \" + ans.toString() +'.');\n\n", "order": "after"}}, "type": "drop-down-axis-reference", "settings": {"dummy": "'ignore'"}, "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "showCorrectAnswer": true}, {"showFeedbackIcon": true, "marks": "4", "scripts": {}, "type": "angle-quantity-from-reference", "settings": {"correct_quantity": "qty(angle_from_ref[0],'deg')", "C1": "75", "close": "1.0", "right": "0.2", "restrict_angle": true, "C2": "50", "C3": "25"}, "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "showCorrectAnswer": true}], "variableReplacements": [], "sortAnswers": false, "scripts": {}, "marks": 0, "showCorrectAnswer": true, "unitTests": [], "type": "gapfill", "prompt": "<p>D =&nbsp;[[0]] <span data-jme-visible=\"debug\">{siground(magD,4)}&nbsp;</span></p>\n<p>at an angle of [[2]]&nbsp;measured from the&nbsp;[[1]].</p>\n<p><span data-jme-visible=\"debug\">{siground(theta,4)}&deg;</span></p>"}], "ungrouped_variables": [], "extensions": ["geogebra", "quantities", "weh"], "advice": "<p>Begin by drawing a free body diagram of the particle, then apply the equations of equilibrium.</p>\n<p>$\\Sigma F_x = 0$</p>\n<p>$A_x + B_x + C_x + D_x&nbsp;= 0$</p>\n<p>$(\\var{enground(A[0])})+&nbsp;(\\var{enground(B[0])}) +&nbsp;(\\var{enground(C[0])})&nbsp;- D \\cos{\\theta} = 0 \\quad $ (1)</p>\n<p>$D \\cos{\\theta} = \\var{enground(A[0] +B[0] +C[0])} &nbsp;\\quad $ (1)</p>\n<p>$\\Sigma F_y = 0$</p>\n<p>$A_y + B_y + C_y + D_y = 0$</p>\n<p>$(\\var{enground(A[1])})+ (\\var{enground(B[1])}) + (\\var{enground(C[1])}) +&nbsp;D \\sin{\\theta} = 0 &nbsp;$&nbsp;</p>\n<p>$ D \\sin{\\theta} =&nbsp;\\simplify{-&nbsp;{enground(A[1] +B[1] +C[1])}}\\quad $ (2)</p>\n<p>Solve (1) and (2) simultaneously for $D$ and $\\theta$.</p>\n<p>Alternately, solve (1) to get&nbsp;$D_x$ and (2) to get $D_y$, then resolve them to find $D$ and $\\theta$.</p>\n<p>$D = \\var{enground(abs(D))}$ {units},</p>\n<p>$\\theta&nbsp;&nbsp;= \\var{siground(theta,4)}$&deg;</p>"}], "pickingStrategy": "all-ordered"}], "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}]}