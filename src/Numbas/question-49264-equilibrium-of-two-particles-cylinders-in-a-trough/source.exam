// Numbas version: exam_results_page_options
{"name": "Equilibrium of two particles: Cylinders in a trough", "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/55/quantities", "/srv/numbas/media/user-extensions/extracted/98/weh"], "custom_part_types": [{"can_be_step": true, "settings": [{"hint": "The correct answer given as a JME quantity.", "input_type": "code", "evaluate": true, "label": "Correct Quantity.", "name": "correctAnswer", "default_value": "", "help_url": ""}, {"hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "evaluate": true, "label": "% Accuracy for right.", "name": "right", "default_value": "0.2", "help_url": ""}, {"hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "evaluate": true, "label": "% Accuracy for close.", "name": "close", "default_value": "1.0", "help_url": ""}, {"hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75", "label": "Close with units.", "name": "C1", "help_url": ""}, {"hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50", "label": "No units or wrong sign", "name": "C2", "help_url": ""}, {"hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25", "label": "Close, no units.", "name": "C3", "help_url": ""}], "marking_notes": [{"definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n", "name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"definition": "qty(student_scalar, student_units)\n\n", "name": "interpreted_answer", "description": "A value representing the student's answer to this part."}, {"definition": "settings[\"correctAnswer\"]\n\n", "name": "correct_quantity", "description": ""}, {"definition": "units(correct_quantity)\n", "name": "correct_units", "description": ""}, {"definition": "[\"plain\",\"en\"]", "name": "allowed_notation_styles", "description": ""}, {"definition": "matchnumber(studentAnswer,allowed_notation_styles)", "name": "match_student_number", "description": ""}, {"definition": "match_student_number[1]", "name": "student_scalar", "description": ""}, {"definition": "join(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n", "name": "student_units", "description": "<p>Does clumsy substitution to</p>\n<p>1.&nbsp;replace '-'&nbsp;with ' '&nbsp;</p>\n<p>2. replace '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>"}, {"definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n", "name": "good_units", "description": ""}, {"definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n", "name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>"}, {"definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   ", "name": "percent_error", "description": ""}, {"definition": "percent_error <= settings['right']\n", "name": "right", "description": ""}, {"definition": "right_sign and percent_error <= settings['close']", "name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>"}, {"definition": "sign(student_scalar) = sign(correct_quantity) ", "name": "right_sign", "description": ""}], "name": "Engineering Accuracy with units", "source": {"edit_page": "/part_type/19/edit", "author": {"name": "William Haynes", "pk": 2530}, "pk": 19}, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "short_name": "engineering-answer", "input_widget": "string", "published": false, "help_url": "", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "extensions": ["quantities"], "public_availability": "restricted", "can_be_gap": true, "input_options": {"hint": {"value": "", "static": true}, "correctAnswer": "siground(settings['correctAnswer'],4)", "allowEmpty": {"value": true, "static": true}}}], "resources": [], "navigation": {"showfrontpage": false, "preventleave": false, "allowregen": true}, "question_groups": [{"questions": [{"metadata": {"description": "<p>Equilibrium of two interacting particles.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "ungrouped_variables": ["width", "d1", "d2", "units", "w1", "w2"], "functions": {"show": {"language": "jme", "definition": "qty(siground(f,4),units[1])", "parameters": [["f", "number"]], "type": "number"}}, "parts": [{"variableReplacements": [], "showCorrectAnswer": true, "type": "gapfill", "marks": 0, "variableReplacementStrategy": "originalfirst", "prompt": "<p><em>A</em>&nbsp;=&nbsp;[[0]]&nbsp; &nbsp;</p>\n<p><em>B</em>&nbsp;=&nbsp;[[1]]&nbsp; &nbsp;</p>\n<p>C =&nbsp;[[2]] &nbsp;</p>", "sortAnswers": false, "customMarkingAlgorithm": "", "unitTests": [], "scripts": {}, "extendBaseMarkingAlgorithm": true, "gaps": [{"unitTests": [], "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "showCorrectAnswer": true, "variableReplacementStrategy": "originalfirst", "marks": "4", "scripts": {}, "type": "engineering-answer", "customMarkingAlgorithm": "", "settings": {"correctAnswer": "qty(A,units[1])", "close": "1.0", "C1": "75", "C3": "25", "right": "0.2", "C2": "50"}, "showFeedbackIcon": true}, {"unitTests": [], "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "showCorrectAnswer": true, "variableReplacementStrategy": "originalfirst", "marks": "4", "scripts": {}, "type": "engineering-answer", "customMarkingAlgorithm": "", "settings": {"correctAnswer": "qty(B,units[1])", "close": "1.0", "C1": "75", "C3": "25", "right": "0.2", "C2": "50"}, "showFeedbackIcon": true}, {"unitTests": [], "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "showCorrectAnswer": true, "variableReplacementStrategy": "originalfirst", "marks": "4", "scripts": {}, "type": "engineering-answer", "customMarkingAlgorithm": "", "settings": {"correctAnswer": "qty(C,units[1])", "close": "1.0", "C1": "75", "C3": "25", "right": "0.2", "C2": "50"}, "showFeedbackIcon": true}], "showFeedbackIcon": true}], "type": "question", "name": "Equilibrium of two particles: Cylinders in a trough", "contributors": [{"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/", "name": "William Haynes"}], "advice": "<p>Given:</p>\n<ul>\n<li>$d$ = {width}&nbsp;{units[0]}&nbsp;$\\qquad r_1$ = {r1}&nbsp;{units[0]} &nbsp;$\\qquad W_1 = $ {w1} {units[1]}&nbsp;$\\qquad r_2$ = {r2}&nbsp;{units[0]} &nbsp;$\\qquad W_2 = $ {w2} {units[1]}</li>\n</ul>\n<p>Draw free body diagrams of the two cylinders.</p>\n<p>{geogebra_applet('rchz6eew', [[\"width\", width], [\"r1\",r1], [\"r2\",r2]] )}</p>\n<p>Find angle $\\theta$ from the geometry of the problem.</p>\n<p style=\"padding-left: 30px;\">$\\theta =cos^{-1} \\left( \\dfrac{d - r_1- r_2}{r_1+r_2} \\right) = \\var{siground(theta,4)}&deg;$</p>\n<p>Find force&nbsp;$A$ using equilibrium of the yellow cylinder</p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\Sigma F_y &amp;= 0\\\\A_y - W_2 &amp;= 0\\\\&nbsp;A \\sin \\theta &amp;= W_2\\\\&nbsp; A &amp;= W_2\\,/\\,\\sin \\theta &amp;=\\var{show(A)}\\end{align}$</p>\n<p>Find forces $B$ and $C$ using equilibrium of the blue cylinder</p>\n<p style=\"padding-left: 30px;\">$\\begin{align} \\Sigma F_y &amp;= 0 &amp; \\Sigma F_x &amp;=0\\\\ B - A_y - W_1 &amp;= 0 &amp; C-A_x &amp;=0\\\\ B &amp;= W_1 + A \\sin \\theta &amp; C &amp;= A \\cos\\theta \\\\&amp;= \\var{show(B)} &amp; &amp;=\\var{show(C)} \\end{align}$</p>\n<p></p>", "statement": "<p>Two cylinders are placed&nbsp;in a {width} {units[0]} wide container.&nbsp;The blue cylinder has a radius $r_1$ = {d1/2}&nbsp;{units[0]}&nbsp;and weighs {w1} {units[1]} and&nbsp;the yellow&nbsp;cylinder has a radius $r_2$ = {d2/2} {units[0] }&nbsp;and weighs {w2} {units[1]}. &nbsp;</p>\n<p>{geogebra_applet('dmn6ddbb', [[\"width\", width], [\"r1\",r1], [\"r2\",r2]] )}</p>\n<p>Assuming smooth contact surfaces, determine the magnitudes of</p>\n<ul>\n<li>Force A, where the two cylinders touch.</li>\n<li>Force <em>B,</em>&nbsp;where the blue cylinder touches the bottom of the trough, and</li>\n<li>Force<em> C,</em> where it touches the left wall.</li>\n</ul>\n<p></p>", "rulesets": {}, "variable_groups": [{"variables": ["base", "r1", "r2", "r", "theta", "A", "B", "C"], "name": "calculated"}], "variables": {"r1": {"definition": "d1/2", "group": "calculated", "templateType": "anything", "name": "r1", "description": ""}, "units": {"definition": "['ft','lb']", "group": "Ungrouped variables", "templateType": "anything", "name": "units", "description": ""}, "theta": {"definition": "degrees(arccos(base/r))", "group": "calculated", "templateType": "anything", "name": "theta", "description": ""}, "A": {"definition": "w2/sin(radians(theta))", "group": "calculated", "templateType": "anything", "name": "A", "description": ""}, "w1": {"definition": "random(1000..5000#250)", "group": "Ungrouped variables", "templateType": "anything", "name": "w1", "description": ""}, "w2": {"definition": "precround(w1 d2^2/d1^2,0)", "group": "Ungrouped variables", "templateType": "anything", "name": "w2", "description": ""}, "B": {"definition": "w1 + A sin(radians(theta))", "group": "calculated", "templateType": "anything", "name": "B", "description": ""}, "d2": {"definition": "random(d1/2 .. d1)", "group": "Ungrouped variables", "templateType": "anything", "name": "d2", "description": "<p>diameter 2</p>\n<p></p>"}, "C": {"definition": "A cos(radians(theta))", "group": "calculated", "templateType": "anything", "name": "C", "description": ""}, "base": {"definition": "width - (d1+d2)/2\n", "group": "calculated", "templateType": "anything", "name": "base", "description": ""}, "r": {"definition": "(d1+d2)/2", "group": "calculated", "templateType": "anything", "name": "r", "description": "<p>distance from center to center</p>"}, "r2": {"definition": "d2/2", "group": "calculated", "templateType": "anything", "name": "r2", "description": ""}, "width": {"definition": "random(d1..d1+d2)", "group": "Ungrouped variables", "templateType": "anything", "name": "width", "description": ""}, "d1": {"definition": "random(4..12 #2)", "group": "Ungrouped variables", "templateType": "anything", "name": "d1", "description": "<p>diameter 1</p>"}}, "extensions": ["geogebra", "quantities", "weh"], "variablesTest": {"condition": "base < r  and width > d1 and d1 <> d2", "maxRuns": 100}, "tags": ["equilibrium", "Equilibrium", "Free Body Diagrams", "mechanics", "Mechanics", "particle", "Particle", "Statics", "statics"], "preamble": {"js": "", "css": ""}}], "pickingStrategy": "all-ordered"}], "contributors": [{"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/", "name": "William Haynes"}]}