// Numbas version: exam_results_page_options
{"name": "Equilibrium of a particle: hanging weight", "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/55/quantities", "/srv/numbas/media/user-extensions/extracted/98/weh"], "custom_part_types": [{"name": "Yes/no", "marking_script": "mark:\nif(studentanswer=correct_answer,\n  correct(),\n  incorrect()\n)\n\ninterpreted_answer:\nstudentAnswer=0\n\ncorrect_answer:\nif(eval(settings[\"correct_answer_expr\"]),0,1)", "source": {"pk": 1, "author": {"name": "Christian Lawson-Perfect", "pk": 7}, "edit_page": "/part_type/1/edit"}, "description": "<p>The answer is either \"Yes\" or \"No\".</p>", "public_availability": "always", "published": true, "help_url": "", "can_be_step": true, "marking_notes": [{"name": "mark", "definition": "if(studentanswer=correct_answer,\n  correct(),\n  incorrect()\n)", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"name": "interpreted_answer", "definition": "studentAnswer=0", "description": "A value representing the student's answer to this part."}, {"name": "correct_answer", "definition": "if(eval(settings[\"correct_answer_expr\"]),0,1)", "description": ""}], "can_be_gap": true, "short_name": "yes-no", "settings": [{"name": "correct_answer_expr", "default_value": "true", "input_type": "mathematical_expression", "hint": "An expression which evaluates to <code>true</code> or <code>false</code>.", "subvars": false, "label": "Is the answer \"Yes\"?", "help_url": ""}], "input_options": {"choices": {"value": ["Yes", "No"], "static": true}, "hint": {"value": "", "static": true}, "correctAnswer": "if(eval(settings[\"correct_answer_expr\"]), 0, 1)"}, "input_widget": "radios", "extensions": []}, {"name": "Engineering Accuracy with units", "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "public_availability": "restricted", "published": false, "help_url": "", "can_be_step": true, "marking_notes": [{"name": "mark", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"name": "interpreted_answer", "definition": "qty(student_scalar, student_units)\n\n", "description": "A value representing the student's answer to this part."}, {"name": "correct_quantity", "definition": "settings[\"correctAnswer\"]\n\n", "description": ""}, {"name": "correct_units", "definition": "units(correct_quantity)\n", "description": ""}, {"name": "allowed_notation_styles", "definition": "[\"plain\",\"en\"]", "description": ""}, {"name": "match_student_number", "definition": "matchnumber(studentAnswer,allowed_notation_styles)", "description": ""}, {"name": "student_scalar", "definition": "match_student_number[1]", "description": ""}, {"name": "student_units", "definition": "join(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'-'),' ')\n,'\u00b0'),' deg')\n", "description": "<p>Does clumsy substitution to</p>\n<p>1.&nbsp;replace '-'&nbsp;with ' '&nbsp;</p>\n<p>2. replace '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>"}, {"name": "good_units", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n", "description": ""}, {"name": "student_quantity", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>"}, {"name": "percent_error", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   ", "description": ""}, {"name": "right", "definition": "percent_error <= settings['right']\n", "description": ""}, {"name": "close", "definition": "right_sign and percent_error <= settings['close']", "description": "<p>Only marked close if the student actually has the right sign.</p>"}, {"name": "right_sign", "definition": "sign(student_scalar) = sign(correct_quantity) ", "description": ""}], "can_be_gap": true, "short_name": "engineering-answer", "settings": [{"name": "correctAnswer", "default_value": "", "label": "Correct Quantity.", "hint": "The correct answer given as a JME quantity.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "right", "default_value": "0.2", "label": "% Accuracy for right.", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "close", "default_value": "1.0", "label": "% Accuracy for close.", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "C1", "default_value": "75", "label": "Close with units.", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "help_url": ""}, {"name": "C2", "default_value": "50", "label": "No units or wrong sign", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "help_url": ""}, {"name": "C3", "default_value": "25", "label": "Close, no units.", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "help_url": ""}], "input_options": {"allowEmpty": {"value": true, "static": true}, "hint": {"value": "", "static": true}, "correctAnswer": "siground(settings['correctAnswer'],4)"}, "input_widget": "string", "extensions": ["quantities"]}, {"name": "Angle quantity", "marking_script": "mark:\nswitch( \nright and good_units and right_sign and angle_in_range, add_credit(1.0,'Correct.'),\nright and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\nright and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but missing degree symbol.'),\nright and good_units and right_sign and not angle_in_range,add_credit(settings['C1'],'Angle is out of range.'),\nclose and good_units, add_credit(settings['C1'],'Close.'),\nclose and not good_units, add_credit(settings['C3'],'Answer is close, but missing degree symbol.'),\nincorrect('Wrong answer.')\n)\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\ncorrect_scalar:\nscalar(correct_quantity)\n  \n\ncorrect_units:\nunits(correct_quantity)\n\ncorrect_quantity:\nsettings['correct_quantity']\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'\u00b0'),' deg')\n\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_quantity),\nmsg,\nfeedback(msg);false)\n\nstudent_quantity:\nswitch(not good_units, \nstudent_scalar * correct_units, \nnot right_sign,\n-quantity(student_scalar, student_units),\nquantity(student_scalar,student_units)\n)\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n\n   \n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\n\nangle_in_range:\nif(settings['restrict_angle'], abs(student_scalar) <= 90, true)", "source": {"pk": 24, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/24/edit"}, "description": "<p>Angle&nbsp;as a quantity in degrees.</p>", "public_availability": "restricted", "published": false, "help_url": "", "can_be_step": true, "marking_notes": [{"name": "mark", "definition": "switch( \nright and good_units and right_sign and angle_in_range, add_credit(1.0,'Correct.'),\nright and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\nright and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but missing degree symbol.'),\nright and good_units and right_sign and not angle_in_range,add_credit(settings['C1'],'Angle is out of range.'),\nclose and good_units, add_credit(settings['C1'],'Close.'),\nclose and not good_units, add_credit(settings['C3'],'Answer is close, but missing degree symbol.'),\nincorrect('Wrong answer.')\n)", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer."}, {"name": "interpreted_answer", "definition": "qty(student_scalar, student_units)", "description": "A value representing the student's answer to this part."}, {"name": "correct_scalar", "definition": "scalar(correct_quantity)\n  ", "description": ""}, {"name": "correct_units", "definition": "units(correct_quantity)", "description": ""}, {"name": "correct_quantity", "definition": "settings['correct_quantity']", "description": ""}, {"name": "allowed_notation_styles", "definition": "[\"plain\",\"en\"]", "description": ""}, {"name": "match_student_number", "definition": "matchnumber(studentAnswer,allowed_notation_styles)", "description": ""}, {"name": "student_scalar", "definition": "match_student_number[1]", "description": ""}, {"name": "student_units", "definition": "join(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)]\n,'\u00b0'),' deg')\n\n", "description": ""}, {"name": "good_units", "definition": "try(\ncompatible(quantity(1, student_units),correct_quantity),\nmsg,\nfeedback(msg);false)", "description": ""}, {"name": "student_quantity", "definition": "switch(not good_units, \nstudent_scalar * correct_units, \nnot right_sign,\n-quantity(student_scalar, student_units),\nquantity(student_scalar,student_units)\n)", "description": ""}, {"name": "right_sign", "definition": "sign(student_scalar) = sign(correct_quantity)", "description": ""}, {"name": "percent_error", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n\n   \n   ", "description": ""}, {"name": "right", "definition": "percent_error <= settings['right']\n", "description": ""}, {"name": "close", "definition": "right_sign and percent_error <= settings['close']\n", "description": ""}, {"name": "angle_in_range", "definition": "if(settings['restrict_angle'], abs(student_scalar) <= 90, true)", "description": ""}], "can_be_gap": true, "short_name": "angle-quantity-from-reference", "settings": [{"name": "correct_quantity", "default_value": "qty(123,'deg')", "label": "Correct Angle as a quantity", "hint": "", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "right", "default_value": "0.2", "label": "% Accuracy for right.", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "restrict_angle", "default_value": true, "label": "Less than 90\u00b0", "hint": "When checked, angle must be between -90&deg; and +90&deg;.", "input_type": "checkbox", "help_url": ""}, {"name": "C1", "default_value": "75", "label": "Close with units.", "hint": "Partial Credit for close value with appropriate units.", "input_type": "percent", "help_url": ""}, {"name": "close", "default_value": "1.0", "label": "% Accuracy for close.", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "evaluate": true, "input_type": "code", "help_url": ""}, {"name": "C2", "default_value": "50", "label": "No units or wrong sign", "hint": "Partial credit for forgetting units or using wrong sign.", "input_type": "percent", "help_url": ""}, {"name": "C3", "default_value": "25", "label": "Close, no units.", "hint": "Partial Credit for close value without units.", "input_type": "percent", "help_url": ""}], "input_options": {"allowEmpty": {"value": false, "static": true}, "hint": {"value": "", "static": true}, "correctAnswer": "plain_string(settings['correct_quantity'])"}, "input_widget": "string", "extensions": ["quantities"]}], "resources": [], "navigation": {"allowregen": true, "preventleave": false, "showfrontpage": false}, "question_groups": [{"questions": [{"preamble": {"css": "", "js": "\n"}, "variable_groups": [{"name": "Inputs", "variables": ["W", "d_1", "d_2", "h", "units"]}, {"name": "results", "variables": ["alpha", "beta", "load", "BC", "AC", "debug"]}, {"name": "answer", "variables": ["Q_bc", "Q_ac"]}], "tags": ["Mechanics, statics, equilibrium, particle equilibrium, 2-d, tension"], "type": "question", "statement": "<p>Equilibrium of a particle: $\\Sigma \\textbf{F} = 0 \\therefore &nbsp;\\Sigma F_x = 0 \\text{ and } \\Sigma F_y =0$&nbsp;</p>\n<p>Find the tensions in the two cables which are supporting&nbsp;a load of&nbsp;{W} {units[0]}.</p>\n<p>$h$ = {h} {units[1]}, $d_1$ = {d_1} {units[1]}, &nbsp;and $d_2$ = {d_2} {units[1]}. &nbsp;Give numeric answers to three significant figures.</p>\n<p>{geogebra_applet('GbauxKWS',[['d_1',d_1],['d_2',d_2],['h',h]])}</p>", "rulesets": {}, "functions": {}, "name": "Equilibrium of a particle: hanging weight", "variablesTest": {"condition": "", "maxRuns": 100}, "variables": {"load": {"name": "load", "group": "results", "templateType": "anything", "definition": "if(units[0]='kg',W 9.81, W)", "description": ""}, "alpha": {"name": "alpha", "group": "results", "templateType": "anything", "definition": "degrees(arctan(h/d_1))", "description": ""}, "debug": {"name": "debug", "group": "results", "templateType": "anything", "definition": "false", "description": ""}, "Q_bc": {"name": "Q_bc", "group": "answer", "templateType": "anything", "definition": "let(unit,if(units[0]='kg','N',units[0]),qty(BC,unit))", "description": ""}, "h": {"name": "h", "group": "Inputs", "templateType": "anything", "definition": "random(1..3#0.5)", "description": ""}, "d_1": {"name": "d_1", "group": "Inputs", "templateType": "anything", "definition": "random(2..5#0.25)", "description": "<p>Horizontal location of point C.</p>"}, "Q_ac": {"name": "Q_ac", "group": "answer", "templateType": "anything", "definition": "let(unit,if(units[0]='kg','N',units[0]),qty(AC,unit))", "description": ""}, "d_2": {"name": "d_2", "group": "Inputs", "templateType": "anything", "definition": "random(2..5#0.25)", "description": ""}, "AC": {"name": "AC", "group": "results", "templateType": "anything", "definition": "load cos(radians(beta))/sin(radians(alpha+beta))", "description": ""}, "W": {"name": "W", "group": "Inputs", "templateType": "anything", "definition": "random([10,20,25,40,50,75,100,120,150])", "description": "<p>anans</p>"}, "beta": {"name": "beta", "group": "results", "templateType": "anything", "definition": "degrees(arctan(h/d_2))", "description": ""}, "BC": {"name": "BC", "group": "results", "templateType": "anything", "definition": "load cos(radians(alpha))/sin(radians(alpha+beta))", "description": "<p>Tension in cable BC</p>"}, "units": {"name": "units", "group": "Inputs", "templateType": "anything", "definition": "random(['lb','ft'], ['N','m'], ['kN','m'], ['kg','m'] )", "description": ""}}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "metadata": {"licence": "Creative Commons Attribution-NonCommercial 4.0 International", "description": "<p>Find the tensions in two ropes supporting a weight.</p>"}, "parts": [{"showFeedbackIcon": true, "displayColumns": "1", "displayType": "radiogroup", "marks": 0, "variableReplacements": [], "choices": ["The tension in <i>AC</i>&nbsp;is greater than the tension in <i>BC</i>.", "The tension in <em>BC</em> is greater&nbsp;than the tension in AC.", "Both tensions are the same and are equal to the weight $W$.", "Both tensions are the same and are equal to half the weight $W$.", "Both tensions are the same, but they are less than the weight $W$"], "showCorrectAnswer": true, "variableReplacementStrategy": "originalfirst", "minMarks": 0, "customMarkingAlgorithm": "", "maxMarks": 0, "matrix": ["award(2,alpha>beta)", "award(2,alpha<beta)", "0", "0", "award(1,alpha=beta)"], "scripts": {}, "extendBaseMarkingAlgorithm": true, "unitTests": [], "type": "1_n_2", "distractors": ["", "", "", "", ""], "prompt": "<p>Pick the correct statement:</p>", "shuffleChoices": false}, {"showFeedbackIcon": true, "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "customMarkingAlgorithm": "", "scripts": {}, "marks": "2", "showCorrectAnswer": true, "settings": {"correct_answer_expr": "false"}, "unitTests": [], "type": "yes-no", "prompt": "<p>Do you need to calculate the lengths of the cables to solve this problem?</p>"}, {"showFeedbackIcon": true, "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "customMarkingAlgorithm": "", "scripts": {}, "marks": "2", "showCorrectAnswer": true, "settings": {"correct_answer_expr": " not(units[0] = 'kg')"}, "unitTests": [{"name": "student says kg is not a force", "variables": [{"value": "304.0454111793", "name": "BC"}, {"value": "4.25", "name": "d_2"}, {"value": "30.4655449195", "name": "beta"}, {"value": "\"N\"", "name": "correct_units"}, {"value": "354.1734692843", "name": "AC"}, {"value": "2.75", "name": "d_1"}, {"value": "40", "name": "W"}, {"value": "2.5", "name": "h"}, {"value": "[ \"kg\", \"m\" ]", "name": "units"}, {"value": "42.2736890061", "name": "alpha"}, {"value": "392.4", "name": "load"}], "notes": [{"expected": {"error": "", "messages": [], "valid": true, "value": "1", "warnings": [], "credit": 0}, "name": "correct_answer"}, {"expected": {"error": "", "messages": ["Your answer is correct.\n\nYou were awarded <strong>1</strong> mark."], "valid": true, "value": "true", "warnings": [], "credit": 1}, "name": "mark"}], "answer": {"value": 1, "empty": false, "valid": true}}, {"name": "student says kg is a force", "variables": [{"value": "304.0454111793", "name": "BC"}, {"value": "4.25", "name": "d_2"}, {"value": "30.4655449195", "name": "beta"}, {"value": "\"N\"", "name": "correct_units"}, {"value": "354.1734692843", "name": "AC"}, {"value": "2.75", "name": "d_1"}, {"value": "40", "name": "W"}, {"value": "2.5", "name": "h"}, {"value": "[ \"kg\", \"m\" ]", "name": "units"}, {"value": "42.2736890061", "name": "alpha"}, {"value": "392.4", "name": "load"}], "notes": [{"expected": {"error": "", "messages": ["Your answer is incorrect."], "valid": true, "value": "false", "warnings": [], "credit": 0}, "name": "mark"}, {"expected": {"error": "", "messages": [], "valid": true, "value": "true", "warnings": [], "credit": 0}, "name": "interpreted_answer"}], "answer": {"value": 0, "empty": false, "valid": true}}, {"name": "student says N is a force", "variables": [{"value": "90.9068004018", "name": "BC"}, {"value": "3.25", "name": "d_2"}, {"value": "24.7751405688", "name": "beta"}, {"value": "\"N\"", "name": "correct_units"}, {"value": "103.1746031746", "name": "AC"}, {"value": "2", "name": "d_1"}, {"value": "100", "name": "W"}, {"value": "1.5", "name": "h"}, {"value": "[ \"N\", \"m\" ]", "name": "units"}, {"value": "36.8698976458", "name": "alpha"}, {"value": "100", "name": "load"}], "notes": [{"expected": {"error": "", "messages": ["Your answer is correct.\n\nYou were awarded <strong>1</strong> mark."], "valid": true, "value": "true", "warnings": [], "credit": 1}, "name": "mark"}], "answer": {"value": 0, "empty": false, "valid": true}}, {"name": "student says N is not a force", "variables": [{"value": "90.9068004018", "name": "BC"}, {"value": "3.25", "name": "d_2"}, {"value": "24.7751405688", "name": "beta"}, {"value": "\"N\"", "name": "correct_units"}, {"value": "103.1746031746", "name": "AC"}, {"value": "2", "name": "d_1"}, {"value": "100", "name": "W"}, {"value": "1.5", "name": "h"}, {"value": "[ \"N\", \"m\" ]", "name": "units"}, {"value": "36.8698976458", "name": "alpha"}, {"value": "100", "name": "load"}], "notes": [{"expected": {"error": "", "messages": ["Your answer is incorrect."], "valid": true, "value": "false", "warnings": [], "credit": 0}, "name": "mark"}], "answer": {"value": 1, "empty": false, "valid": true}}], "type": "yes-no", "prompt": "<p>Is the load a force?</p>"}, {"showFeedbackIcon": true, "marks": 0, "scripts": {}, "extendBaseMarkingAlgorithm": true, "type": "information", "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "unitTests": [], "variableReplacements": [], "showCorrectAnswer": true, "prompt": "<ol>\n<li>Carefully draw a neat, labled, free body diagram of particle <em>C</em>.</li>\n<li>Based on your FBD&nbsp;develop two equlibrium&nbsp;equations in terms of the symbols defined on your free body diagram.</li>\n</ol>"}, {"showFeedbackIcon": true, "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "type": "gapfill", "variableReplacementStrategy": "originalfirst", "gaps": [{"showFeedbackIcon": true, "marks": "4", "scripts": {}, "extendBaseMarkingAlgorithm": true, "type": "angle-quantity-from-reference", "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "settings": {"correct_quantity": "qty(alpha,'deg')", "C1": "75", "close": "1.01", "right": "0.2", "restrict_angle": true, "C2": "50", "C3": "25"}, "variableReplacements": [], "showCorrectAnswer": true}, {"showFeedbackIcon": true, "marks": "4", "scripts": {}, "extendBaseMarkingAlgorithm": true, "type": "angle-quantity-from-reference", "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "settings": {"correct_quantity": "qty(beta ,'deg')", "C1": "75", "close": "1.01", "right": "0.2", "restrict_angle": true, "C2": "50", "C3": "25"}, "variableReplacements": [], "showCorrectAnswer": true}], "customMarkingAlgorithm": "", "scripts": {}, "marks": 0, "showCorrectAnswer": true, "unitTests": [], "sortAnswers": false, "prompt": "<p>Find the necessary angles:&nbsp;</p>\n<p>$\\alpha$ =&nbsp;[[0]]&deg; &nbsp;</p>\n<p>$\\beta$ =&nbsp;[[1]]&deg;</p>\n<p></p>"}, {"showFeedbackIcon": true, "extendBaseMarkingAlgorithm": true, "variableReplacements": [], "type": "gapfill", "variableReplacementStrategy": "originalfirst", "gaps": [{"showFeedbackIcon": true, "marks": "4", "scripts": {}, "extendBaseMarkingAlgorithm": true, "type": "engineering-answer", "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "settings": {"close": "1.0", "C1": "75", "right": "0.2", "C2": "50", "correctAnswer": "q_ac", "C3": "25"}, "variableReplacements": [], "showCorrectAnswer": true}, {"showFeedbackIcon": true, "marks": "4", "scripts": {}, "extendBaseMarkingAlgorithm": true, "type": "engineering-answer", "unitTests": [], "customMarkingAlgorithm": "", "variableReplacementStrategy": "originalfirst", "settings": {"close": "1.0", "C1": "75", "right": "0.2", "C2": "50", "correctAnswer": "q_bc", "C3": "25"}, "variableReplacements": [], "showCorrectAnswer": true}], "customMarkingAlgorithm": "", "scripts": {}, "marks": 0, "showCorrectAnswer": true, "unitTests": [], "sortAnswers": false, "prompt": "<p>Substitute the known weight and angles $\\alpha$ and $\\beta$ into your equations, then solve them simultaneously to find the tensions in cables $AC$ and $BC$</p>\n<p><em>AC</em> =&nbsp;[[0]]&nbsp; <span data-jme-visible=\"debug\">&nbsp;{q_ac}</span></p>\n<p><em>&nbsp;BC</em> =&nbsp;[[1]] &nbsp; <span data-jme-visible=\"debug\">&nbsp;{q_bc} &nbsp;</span></p>"}], "ungrouped_variables": [], "extensions": ["geogebra", "quantities", "weh"], "advice": "<p>Draw a free body diagram of the particle. &nbsp;Apply the equations of equilibrium to get \\(\\Sigma F_x = -AB_x + CB_x = 0\\) and&nbsp;&nbsp;\\(\\Sigma F_y = AB_y + CB_y -W = 0\\). &nbsp;Express the components in terms of the magnitudes \\((AB, CB)\\) and directions \\((\\alpha, \\beta)\\) of forces of the ropes. &nbsp;Solve the two equations simultaneously for the unknown magnitudes.</p>"}], "pickingStrategy": "all-ordered"}], "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}]}